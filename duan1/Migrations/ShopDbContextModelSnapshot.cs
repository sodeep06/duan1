// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using duan1.Models;

#nullable disable

namespace duan1.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    partial class ShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("duan1.Models.ChiTietSanPham", b =>
                {
                    b.Property<string>("MaSPCT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KichThuoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MauSac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongTon")
                        .HasColumnType("int");

                    b.HasKey("MaSPCT");

                    b.HasIndex("MaSP");

                    b.ToTable("ChiTietSanPhams");
                });

            modelBuilder.Entity("duan1.Models.DanhMuc", b =>
                {
                    b.Property<string>("MaDM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenDM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDM");

                    b.ToTable("DanhMucs");
                });

            modelBuilder.Entity("duan1.Models.DonHang", b =>
                {
                    b.Property<string>("MaDH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaDH");

                    b.HasIndex("MaKH");

                    b.HasIndex("MaNV");

                    b.HasIndex("MaVoucher");

                    b.ToTable("DonHangs");
                });

            modelBuilder.Entity("duan1.Models.DonHangChiTiet", b =>
                {
                    b.Property<string>("MaDHCT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaDH")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaSPCT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDHCT");

                    b.HasIndex("MaDH");

                    b.HasIndex("MaSPCT");

                    b.ToTable("DonHangChiTiets");
                });

            modelBuilder.Entity("duan1.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKH")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKH");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("duan1.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaNV");

                    b.HasIndex("VaiTro");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("duan1.Models.SanPham", b =>
                {
                    b.Property<string>("MaSP")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DanhMucMaDM")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaDM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenSP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaSP");

                    b.HasIndex("DanhMucMaDM");

                    b.ToTable("SanPhams");
                });

            modelBuilder.Entity("duan1.Models.VaiTro", b =>
                {
                    b.Property<string>("MaVaiTro")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenVaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaVaiTro");

                    b.ToTable("VaiTros");
                });

            modelBuilder.Entity("duan1.Models.Voucher", b =>
                {
                    b.Property<string>("MaVoucher")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("GiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenVoucher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaVoucher");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("duan1.Models.ChiTietSanPham", b =>
                {
                    b.HasOne("duan1.Models.SanPham", "SanPham")
                        .WithMany("ChiTietSanPhams")
                        .HasForeignKey("MaSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("duan1.Models.DonHang", b =>
                {
                    b.HasOne("duan1.Models.KhachHang", "KhachHang")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("duan1.Models.NhanVien", "NhanVien")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("duan1.Models.Voucher", "Voucher")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaVoucher");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("duan1.Models.DonHangChiTiet", b =>
                {
                    b.HasOne("duan1.Models.DonHang", "DonHang")
                        .WithMany("DonHangChiTiets")
                        .HasForeignKey("MaDH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("duan1.Models.ChiTietSanPham", "ChiTietSanPham")
                        .WithMany()
                        .HasForeignKey("MaSPCT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietSanPham");

                    b.Navigation("DonHang");
                });

            modelBuilder.Entity("duan1.Models.NhanVien", b =>
                {
                    b.HasOne("duan1.Models.VaiTro", "VaiTroNV")
                        .WithMany("NhanViens")
                        .HasForeignKey("VaiTro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VaiTroNV");
                });

            modelBuilder.Entity("duan1.Models.SanPham", b =>
                {
                    b.HasOne("duan1.Models.DanhMuc", "DanhMuc")
                        .WithMany("SanPhams")
                        .HasForeignKey("DanhMucMaDM");

                    b.Navigation("DanhMuc");
                });

            modelBuilder.Entity("duan1.Models.DanhMuc", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("duan1.Models.DonHang", b =>
                {
                    b.Navigation("DonHangChiTiets");
                });

            modelBuilder.Entity("duan1.Models.KhachHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("duan1.Models.NhanVien", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("duan1.Models.SanPham", b =>
                {
                    b.Navigation("ChiTietSanPhams");
                });

            modelBuilder.Entity("duan1.Models.VaiTro", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("duan1.Models.Voucher", b =>
                {
                    b.Navigation("DonHangs");
                });
#pragma warning restore 612, 618
        }
    }
}
